{"ast":null,"code":"import _slicedToArray from\"/home/student/fibo/react-fibonacci-calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./App.css\";import NaturalNumberInput from\"components/NaturalNumberInput/NaturalNumberInput\";import CalculationResult from\"components/CalculationResult/CalculationResult\";import{useState,useEffect}from\"react\";import{Fibonacci}from\"utils/fibonacci\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];useEffect(function(){if(!isLoading||inputValue===\"\")return;function handleCalculateButtonClick(){setResult(Fibonacci(inputValue));setIsLoading(false);}handleCalculateButtonClick();},[isLoading,inputValue]);return/*#__PURE__*/_jsx(\"div\",{className:\"App-background\",children:/*#__PURE__*/_jsx(\"div\",{className:\"App-container column\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column horizontal-center content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Fibonacci Calculator\"}),/*#__PURE__*/_jsx(NaturalNumberInput,{value:inputValue,setValue:setInputValue,setResult:setResult}),/*#__PURE__*/_jsx(\"button\",{className:\"calculate-fibonacci-button\",onClick:function onClick(e){if(inputValue!==\"\")setIsLoading(true);},children:\"Calculate Fibonacci\"}),/*#__PURE__*/_jsx(CalculationResult,{result:result,isLoading:isLoading})]})})});}","map":{"version":3,"sources":["/home/student/fibo/react-fibonacci-calculator/src/components/App/App.js"],"names":["NaturalNumberInput","CalculationResult","useState","useEffect","Fibonacci","App","inputValue","setInputValue","undefined","result","setResult","isLoading","setIsLoading","handleCalculateButtonClick","e"],"mappings":"gIAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,kBAAP,KAA+B,kDAA/B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,gDAA9B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,SAAT,KAA0B,iBAA1B,C,wFAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,cAAoCH,QAAQ,CAAC,EAAD,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eACA,eAA4BL,QAAQ,CAACM,SAAD,CAApC,yCAAOC,MAAP,eAAeC,SAAf,eACA,eAAkCR,QAAQ,CAAC,KAAD,CAA1C,yCAAOS,SAAP,eAAkBC,YAAlB,eAEAT,SAAS,CAAC,UAAM,CACd,GAAI,CAACQ,SAAD,EAAcL,UAAU,GAAK,EAAjC,CAAqC,OACrC,QAASO,CAAAA,0BAAT,EAAsC,CACpCH,SAAS,CAACN,SAAS,CAACE,UAAD,CAAV,CAAT,CACAM,YAAY,CAAC,KAAD,CAAZ,CACD,CACDC,0BAA0B,GAC3B,CAPQ,CAON,CAACF,SAAD,CAAYL,UAAZ,CAPM,CAAT,CASA,mBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,YAAK,SAAS,CAAC,sBAAf,uBACE,aAAK,SAAS,CAAC,kCAAf,wBACE,4CADF,cAEE,KAAC,kBAAD,EACE,KAAK,CAAEA,UADT,CAEE,QAAQ,CAAEC,aAFZ,CAGE,SAAS,CAAEG,SAHb,EAFF,cAOE,eACE,SAAS,CAAC,4BADZ,CAEE,OAAO,CAAE,iBAACI,CAAD,CAAO,CACd,GAAIR,UAAU,GAAK,EAAnB,CAAuBM,YAAY,CAAC,IAAD,CAAZ,CACxB,CAJH,iCAPF,cAeE,KAAC,iBAAD,EAAmB,MAAM,CAAEH,MAA3B,CAAmC,SAAS,CAAEE,SAA9C,EAfF,GADF,EADF,EADF,CAuBD","sourcesContent":["import \"./App.css\";\nimport NaturalNumberInput from \"components/NaturalNumberInput/NaturalNumberInput\";\nimport CalculationResult from \"components/CalculationResult/CalculationResult\";\nimport { useState, useEffect } from \"react\";\nimport { Fibonacci } from \"utils/fibonacci\";\n\nexport default function App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [result, setResult] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!isLoading || inputValue === \"\") return;\n    function handleCalculateButtonClick() {\n      setResult(Fibonacci(inputValue));\n      setIsLoading(false);\n    }\n    handleCalculateButtonClick();\n  }, [isLoading, inputValue]);\n\n  return (\n    <div className=\"App-background\">\n      <div className=\"App-container column\">\n        <div className=\"column horizontal-center content\">\n          <h1>Fibonacci Calculator</h1>\n          <NaturalNumberInput\n            value={inputValue}\n            setValue={setInputValue}\n            setResult={setResult}\n          />\n          <button\n            className=\"calculate-fibonacci-button\"\n            onClick={(e) => {\n              if (inputValue !== \"\") setIsLoading(true);\n            }}\n          >\n            Calculate Fibonacci\n          </button>\n          <CalculationResult result={result} isLoading={isLoading} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}