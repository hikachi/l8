{"ast":null,"code":"/* global BigInt */import React from\"react\";import{stringIsNaturalNumber}from\"utils/string-utils\";import\"./NaturalNumberInput.css\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function IntegerInput(props){function processInput(event){var value=event.target.value;// in case the value is an empty string\n// set it and do nothing\nif(value===\"\"){props.setValue(value);props.setResult(undefined);return;}if(!stringIsNaturalNumber(value))return;var integer=BigInt(value);// we use BigInt to prevent precision errors\nprops.setValue(integer);props.setResult(undefined);}return/*#__PURE__*/_jsx(\"input\",{className:\"natural-integer-input\",value:props.value.toLocaleString(\"fullwide\",{useGrouping:false})// fullwide to prevent scientific notation\n,onChange:processInput,\"aria-label\":\"integer-input\",placeholder:\"Specify a natural number\"});}","map":{"version":3,"sources":["/home/student/fibo/react-fibonacci-calculator/src/components/NaturalNumberInput/NaturalNumberInput.js"],"names":["React","stringIsNaturalNumber","IntegerInput","props","processInput","event","value","target","setValue","setResult","undefined","integer","BigInt","toLocaleString","useGrouping"],"mappings":"AAAA,mBACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,qBAAT,KAAsC,oBAAtC,CACA,MAAO,0BAAP,C,2CAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC1C,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA;AACA;AACA,GAAIA,KAAK,GAAK,EAAd,CAAkB,CAChBH,KAAK,CAACK,QAAN,CAAeF,KAAf,EACAH,KAAK,CAACM,SAAN,CAAgBC,SAAhB,EACA,OACD,CACD,GAAI,CAACT,qBAAqB,CAACK,KAAD,CAA1B,CAAmC,OACnC,GAAMK,CAAAA,OAAO,CAAGC,MAAM,CAACN,KAAD,CAAtB,CAA+B;AAC/BH,KAAK,CAACK,QAAN,CAAeG,OAAf,EACAR,KAAK,CAACM,SAAN,CAAgBC,SAAhB,EACD,CAED,mBACE,cACE,SAAS,CAAC,uBADZ,CAEE,KAAK,CAAEP,KAAK,CAACG,KAAN,CAAYO,cAAZ,CAA2B,UAA3B,CAAuC,CAAEC,WAAW,CAAE,KAAf,CAAvC,CAAgE;AAFzE,CAGE,QAAQ,CAAEV,YAHZ,CAIE,aAAW,eAJb,CAKE,WAAW,CAAC,0BALd,EADF,CASD","sourcesContent":["/* global BigInt */\nimport React from \"react\";\nimport { stringIsNaturalNumber } from \"utils/string-utils\";\nimport \"./NaturalNumberInput.css\";\n\nexport default function IntegerInput(props) {\n  function processInput(event) {\n    const value = event.target.value;\n    // in case the value is an empty string\n    // set it and do nothing\n    if (value === \"\") {\n      props.setValue(value);\n      props.setResult(undefined);\n      return;\n    }\n    if (!stringIsNaturalNumber(value)) return;\n    const integer = BigInt(value); // we use BigInt to prevent precision errors\n    props.setValue(integer);\n    props.setResult(undefined);\n  }\n\n  return (\n    <input\n      className=\"natural-integer-input\"\n      value={props.value.toLocaleString(\"fullwide\", { useGrouping: false })} // fullwide to prevent scientific notation\n      onChange={processInput}\n      aria-label=\"integer-input\"\n      placeholder=\"Specify a natural number\"\n    ></input>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}